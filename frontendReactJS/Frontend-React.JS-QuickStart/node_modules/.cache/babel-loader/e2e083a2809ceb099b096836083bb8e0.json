{"ast":null,"code":"import { filterProps } from './utils';\nimport { MessageFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = ['localeMatcher', 'type'];\nexport function formatPlural(_a, getPluralRules, value, options) {\n  var locale = _a.locale,\n      onError = _a.onError;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!Intl.PluralRules) {\n    onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n  }\n\n  var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n\n  try {\n    return getPluralRules(locale, filteredOptions).select(value);\n  } catch (e) {\n    onError(new MessageFormatError('Error formatting plural.', e));\n  }\n\n  return 'other';\n}","map":{"version":3,"sources":["C:/Users/dangk/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/node_modules/@formatjs/intl/lib/src/plural.js"],"names":["filterProps","MessageFormatError","ErrorCode","FormatError","PLURAL_FORMAT_OPTIONS","formatPlural","_a","getPluralRules","value","options","locale","onError","Intl","PluralRules","MISSING_INTL_API","filteredOptions","select","e"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,kBAAT,QAAmC,SAAnC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,oBAAvC;AACA,IAAIC,qBAAqB,GAAG,CACxB,eADwB,EAExB,MAFwB,CAA5B;AAIA,OAAO,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,cAA1B,EAA0CC,KAA1C,EAAiDC,OAAjD,EAA0D;AAC7D,MAAIC,MAAM,GAAGJ,EAAE,CAACI,MAAhB;AAAA,MAAwBC,OAAO,GAAGL,EAAE,CAACK,OAArC;;AACA,MAAIF,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAI,CAACG,IAAI,CAACC,WAAV,EAAuB;AACnBF,IAAAA,OAAO,CAAC,IAAIR,WAAJ,CAAgB,mHAAhB,EAAqID,SAAS,CAACY,gBAA/I,CAAD,CAAP;AACH;;AACD,MAAIC,eAAe,GAAGf,WAAW,CAACS,OAAD,EAAUL,qBAAV,CAAjC;;AACA,MAAI;AACA,WAAOG,cAAc,CAACG,MAAD,EAASK,eAAT,CAAd,CAAwCC,MAAxC,CAA+CR,KAA/C,CAAP;AACH,GAFD,CAGA,OAAOS,CAAP,EAAU;AACNN,IAAAA,OAAO,CAAC,IAAIV,kBAAJ,CAAuB,0BAAvB,EAAmDgB,CAAnD,CAAD,CAAP;AACH;;AACD,SAAO,OAAP;AACH","sourcesContent":["import { filterProps } from './utils';\r\nimport { MessageFormatError } from './error';\r\nimport { ErrorCode, FormatError } from 'intl-messageformat';\r\nvar PLURAL_FORMAT_OPTIONS = [\r\n    'localeMatcher',\r\n    'type',\r\n];\r\nexport function formatPlural(_a, getPluralRules, value, options) {\r\n    var locale = _a.locale, onError = _a.onError;\r\n    if (options === void 0) { options = {}; }\r\n    if (!Intl.PluralRules) {\r\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\r\n    }\r\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\r\n    try {\r\n        return getPluralRules(locale, filteredOptions).select(value);\r\n    }\r\n    catch (e) {\r\n        onError(new MessageFormatError('Error formatting plural.', e));\r\n    }\r\n    return 'other';\r\n}\r\n"]},"metadata":{},"sourceType":"module"}