{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dangk\\\\Documents\\\\webFullstack\\\\frontendReactJS\\\\Frontend-React.JS-QuickStart\\\\src\\\\components\\\\ConfirmModal.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Modal } from 'reactstrap';\nimport './ConfirmModal.scss';\nimport * as actions from \"../store/actions\";\nimport { KeyCodeUtils } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConfirmModal extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {};\n    this.state = { ...this.initialState\n    };\n\n    this.handlerKeyDown = event => {\n      const keyCode = event.which || event.keyCode;\n\n      if (keyCode === KeyCodeUtils.ENTER) {\n        if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\n        this.acceptBtnRef.current.click();\n      }\n    };\n\n    this.onAcceptBtnClick = () => {\n      const {\n        contentOfConfirmModal\n      } = this.props;\n\n      if (contentOfConfirmModal.handleFunc) {\n        contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\n      }\n\n      this.onClose();\n    };\n\n    this.onClose = () => {\n      this.props.setContentOfConfirmModal({\n        isOpen: false,\n        messageId: \"\",\n        handleFunc: null,\n        dataFunc: null\n      });\n    };\n\n    this.acceptBtnRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handlerKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handlerKeyDown);\n  }\n\n  render() {\n    const {\n      contentOfConfirmModal\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: contentOfConfirmModal.isOpen,\n      className: \"confirm-modal\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-title\",\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"common.confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-close\",\n            onClick: this.onClose,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fal fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-container text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-add\",\n                  onClick: this.onClose,\n                  children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                    id: \"common.close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  ref: this.acceptBtnRef,\n                  className: \"btn btn-add\",\n                  onClick: this.onAcceptBtnClick,\n                  children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                    id: \"common.accept\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lang: state.app.language,\n    contentOfConfirmModal: state.app.contentOfConfirmModal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setContentOfConfirmModal: contentOfConfirmModal => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);","map":{"version":3,"sources":["C:/Users/dangk/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/src/components/ConfirmModal.js"],"names":["React","Component","FormattedMessage","connect","Modal","actions","KeyCodeUtils","ConfirmModal","constructor","props","initialState","state","handlerKeyDown","event","keyCode","which","ENTER","acceptBtnRef","current","disabled","click","onAcceptBtnClick","contentOfConfirmModal","handleFunc","dataFunc","onClose","setContentOfConfirmModal","isOpen","messageId","createRef","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","mapStateToProps","lang","app","language","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'reactstrap';\r\n\r\nimport './ConfirmModal.scss';\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils } from \"../utils\";\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.acceptBtnRef = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n    };\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\r\n            this.acceptBtnRef.current.click();\r\n        }\r\n    }\r\n\r\n    onAcceptBtnClick = () => {\r\n        const { contentOfConfirmModal } = this.props;\r\n        if (contentOfConfirmModal.handleFunc) {\r\n            contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.setContentOfConfirmModal({\r\n            isOpen: false,\r\n            messageId: \"\",\r\n            handleFunc: null,\r\n            dataFunc: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { contentOfConfirmModal } = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={contentOfConfirmModal.isOpen} className='confirm-modal' centered={true}>\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-title\">\r\n                        <FormattedMessage id={\"common.confirm\"} />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-close\" onClick={this.onClose}>\r\n                            <i className=\"fal fa-times\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <div className=\"confirm-modal-content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormattedMessage id={contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"} />\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"btn-container text-center\">\r\n                                    <button className=\"btn btn-add\" onClick={this.onClose} >\r\n                                        <FormattedMessage id=\"common.close\" />\r\n                                    </button>\r\n                                    <button ref={this.acceptBtnRef} className=\"btn btn-add\" onClick={this.onAcceptBtnClick}>\r\n                                        <FormattedMessage id={\"common.accept\"} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        contentOfConfirmModal: state.app.contentOfConfirmModal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setContentOfConfirmModal: (contentOfConfirmModal) => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);\r\n"]},"metadata":{},"sourceType":"module"}