{"ast":null,"code":"import { invariant } from '../utils';\nimport { Type } from '../262';\n/**\r\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\r\n * @param unit\r\n */\n\nexport function SingularRelativeTimeUnit(unit) {\n  invariant(Type(unit) === 'String', 'unit must be a string');\n  if (unit === 'seconds') return 'second';\n  if (unit === 'minutes') return 'minute';\n  if (unit === 'hours') return 'hour';\n  if (unit === 'days') return 'day';\n  if (unit === 'weeks') return 'week';\n  if (unit === 'months') return 'month';\n  if (unit === 'quarters') return 'quarter';\n  if (unit === 'years') return 'year';\n\n  if (unit !== 'second' && unit !== 'minute' && unit !== 'hour' && unit !== 'day' && unit !== 'week' && unit !== 'month' && unit !== 'quarter' && unit !== 'year') {\n    throw new RangeError('invalid unit');\n  }\n\n  return unit;\n}","map":{"version":3,"sources":["C:/Users/dangk/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/SingularRelativeTimeUnit.js"],"names":["invariant","Type","SingularRelativeTimeUnit","unit","RangeError"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,IAAlC,EAAwC;AAC3CH,EAAAA,SAAS,CAACC,IAAI,CAACE,IAAD,CAAJ,KAAe,QAAhB,EAA0B,uBAA1B,CAAT;AACA,MAAIA,IAAI,KAAK,SAAb,EACI,OAAO,QAAP;AACJ,MAAIA,IAAI,KAAK,SAAb,EACI,OAAO,QAAP;AACJ,MAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;AACJ,MAAIA,IAAI,KAAK,MAAb,EACI,OAAO,KAAP;AACJ,MAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;AACJ,MAAIA,IAAI,KAAK,QAAb,EACI,OAAO,OAAP;AACJ,MAAIA,IAAI,KAAK,UAAb,EACI,OAAO,SAAP;AACJ,MAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;;AACJ,MAAIA,IAAI,KAAK,QAAT,IACAA,IAAI,KAAK,QADT,IAEAA,IAAI,KAAK,MAFT,IAGAA,IAAI,KAAK,KAHT,IAIAA,IAAI,KAAK,MAJT,IAKAA,IAAI,KAAK,OALT,IAMAA,IAAI,KAAK,SANT,IAOAA,IAAI,KAAK,MAPb,EAOqB;AACjB,UAAM,IAAIC,UAAJ,CAAe,cAAf,CAAN;AACH;;AACD,SAAOD,IAAP;AACH","sourcesContent":["import { invariant } from '../utils';\r\nimport { Type } from '../262';\r\n/**\r\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\r\n * @param unit\r\n */\r\nexport function SingularRelativeTimeUnit(unit) {\r\n    invariant(Type(unit) === 'String', 'unit must be a string');\r\n    if (unit === 'seconds')\r\n        return 'second';\r\n    if (unit === 'minutes')\r\n        return 'minute';\r\n    if (unit === 'hours')\r\n        return 'hour';\r\n    if (unit === 'days')\r\n        return 'day';\r\n    if (unit === 'weeks')\r\n        return 'week';\r\n    if (unit === 'months')\r\n        return 'month';\r\n    if (unit === 'quarters')\r\n        return 'quarter';\r\n    if (unit === 'years')\r\n        return 'year';\r\n    if (unit !== 'second' &&\r\n        unit !== 'minute' &&\r\n        unit !== 'hour' &&\r\n        unit !== 'day' &&\r\n        unit !== 'week' &&\r\n        unit !== 'month' &&\r\n        unit !== 'quarter' &&\r\n        unit !== 'year') {\r\n        throw new RangeError('invalid unit');\r\n    }\r\n    return unit;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}