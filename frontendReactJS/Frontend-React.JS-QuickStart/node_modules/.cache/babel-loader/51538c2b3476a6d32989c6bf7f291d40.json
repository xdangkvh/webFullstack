{"ast":null,"code":"import messages_vi from '../translations/vi.json';\nimport messages_en from '../translations/en.json';\n\nconst flattenMessages = (nestedMessages, prefix = '') => {\n  if (nestedMessages == null) {\n    return {};\n  }\n\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === 'string') {\n      Object.assign(messages, {\n        [prefixedKey]: value\n      });\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, {});\n};\n\nconst messages = {\n  'vi': flattenMessages(messages_vi),\n  'en': flattenMessages(messages_en)\n};\nexport default class LanguageUtils {\n  static getMessageByKey(key, lang) {\n    return messages[lang][key];\n  }\n\n  static getFlattenedMessages() {\n    return messages;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/src/utils/LanguageUtils.js"],"names":["messages_vi","messages_en","flattenMessages","nestedMessages","prefix","Object","keys","reduce","messages","key","value","prefixedKey","assign","LanguageUtils","getMessageByKey","lang","getFlattenedMessages"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,eAAe,GAAI,CAACC,cAAD,EAAiBC,MAAM,GAAG,EAA1B,KAAiC;AACtD,MAAID,cAAc,IAAI,IAAtB,EAA4B;AACxB,WAAO,EAAP;AACH;;AACD,SAAOE,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,MAA5B,CAAmC,CAACC,QAAD,EAAWC,GAAX,KAAmB;AACzD,UAAMC,KAAK,GAAGP,cAAc,CAACM,GAAD,CAA5B;AACA,UAAME,WAAW,GAAGP,MAAM,GAAI,GAAEA,MAAO,IAAGK,GAAI,EAApB,GAAwBA,GAAlD;;AAEA,QAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC3BL,MAAAA,MAAM,CAACO,MAAP,CAAcJ,QAAd,EAAwB;AAAC,SAACG,WAAD,GAAeD;AAAhB,OAAxB;AACH,KAFD,MAEO;AACHL,MAAAA,MAAM,CAACO,MAAP,CAAcJ,QAAd,EAAwBN,eAAe,CAACQ,KAAD,EAAQC,WAAR,CAAvC;AACH;;AAED,WAAOH,QAAP;AACH,GAXM,EAWJ,EAXI,CAAP;AAYH,CAhBD;;AAkBA,MAAMA,QAAQ,GAAG;AACb,QAAMN,eAAe,CAACF,WAAD,CADR;AAEb,QAAME,eAAe,CAACD,WAAD;AAFR,CAAjB;AAKA,eAAe,MAAMY,aAAN,CAAoB;AACT,SAAfC,eAAe,CAACL,GAAD,EAAMM,IAAN,EAAY;AAC9B,WAAOP,QAAQ,CAACO,IAAD,CAAR,CAAeN,GAAf,CAAP;AACH;;AAE0B,SAApBO,oBAAoB,GAAG;AAC1B,WAAOR,QAAP;AACH;;AAP8B","sourcesContent":["import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}