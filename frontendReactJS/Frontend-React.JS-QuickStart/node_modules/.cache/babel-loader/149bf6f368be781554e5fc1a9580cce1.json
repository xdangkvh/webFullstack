{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dangk\\\\Documents\\\\webFullstack\\\\frontendReactJS\\\\Frontend-React.JS-QuickStart\\\\src\\\\utils\\\\ToastUtil.js\";\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport CustomToast from \"../components/CustomToast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TYPE_SUCCESS = 'SUCCESS';\nconst TYPE_INFO = 'INFO';\nconst TYPE_WARN = 'WARN';\nconst TYPE_ERROR = 'ERROR';\n\nclass ToastUtil {\n  static success(title, message) {\n    this.show(TYPE_SUCCESS, title, message);\n  }\n\n  static info(title, message) {\n    this.show(TYPE_INFO, title, message);\n  }\n\n  static warn(title, message) {\n    this.show(TYPE_WARN, title, message);\n  }\n\n  static error(title, message) {\n    this.show(TYPE_ERROR, title, message);\n  }\n\n  static successRaw(title, message) {\n    this.show(TYPE_SUCCESS, title, message, true);\n  }\n\n  static errorRaw(title, message, autoCloseDelay = 3000) {\n    this.show(TYPE_ERROR, title, message, true, autoCloseDelay);\n  }\n\n  static errorApi(error, title = 'common.fail-to-load-data', autoCloseDelay = 3000) {\n    if (axios.isCancel(error)) {\n      // Do nothing if request was cancelled\n      return;\n    }\n\n    let message = null;\n    let messageId = 'common.unknown-error';\n\n    if (error.httpStatusCode >= 500) {\n      messageId = 'common.internal-server-error';\n    } else if (error.httpStatusCode < 500 && error.httpStatusCode >= 400) {\n      if (error.httpStatusCode === 400) {\n        messageId = 'common.bad-request';\n      } else if (error.httpStatusCode === 403) {\n        messageId = 'common.forbiden-request';\n      }\n    } else {\n      // Request fail even server was returned a success response\n      if (error.errorMessage) {\n        message = error.errorMessage;\n      }\n    }\n\n    toast.error( /*#__PURE__*/_jsxDEV(CustomToast, {\n      titleId: title,\n      message: message,\n      messageId: messageId,\n      time: new Date()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this), {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      pauseOnHover: true,\n      autoClose: autoCloseDelay\n    });\n  }\n\n  static show(type, title, message, rawMessage = false, autoCloseDelay = 3000) {\n    const content = /*#__PURE__*/_jsxDEV(CustomToast, {\n      titleId: title,\n      messageId: rawMessage ? null : message,\n      message: rawMessage ? message : null,\n      time: new Date()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this);\n\n    const options = {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      pauseOnHover: true,\n      autoClose: autoCloseDelay\n    };\n\n    switch (type) {\n      case TYPE_SUCCESS:\n        toast.success(content, options);\n        break;\n\n      case TYPE_INFO:\n        toast.info(content, options);\n        break;\n\n      case TYPE_WARN:\n        toast.warn(content, options);\n        break;\n\n      case TYPE_ERROR:\n        toast.error(content, options);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n}\n\nexport default ToastUtil;","map":{"version":3,"sources":["C:/Users/dangk/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/src/utils/ToastUtil.js"],"names":["React","toast","axios","CustomToast","TYPE_SUCCESS","TYPE_INFO","TYPE_WARN","TYPE_ERROR","ToastUtil","success","title","message","show","info","warn","error","successRaw","errorRaw","autoCloseDelay","errorApi","isCancel","messageId","httpStatusCode","errorMessage","Date","position","POSITION","BOTTOM_RIGHT","pauseOnHover","autoClose","type","rawMessage","content","options"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nimport CustomToast from \"../components/CustomToast\";\r\n\r\nconst TYPE_SUCCESS = 'SUCCESS';\r\nconst TYPE_INFO = 'INFO';\r\nconst TYPE_WARN = 'WARN';\r\nconst TYPE_ERROR = 'ERROR';\r\n\r\nclass ToastUtil {\r\n\r\n    static success(title, message) {\r\n        this.show(TYPE_SUCCESS, title, message);\r\n    }\r\n\r\n    static info(title, message) {\r\n        this.show(TYPE_INFO, title, message);\r\n    }\r\n\r\n    static warn(title, message) {\r\n        this.show(TYPE_WARN, title, message);\r\n    }\r\n\r\n    static error(title, message) {\r\n        this.show(TYPE_ERROR, title, message);\r\n    }\r\n\r\n    static successRaw(title, message) {\r\n        this.show(TYPE_SUCCESS, title, message, true);\r\n    }\r\n\r\n    static errorRaw(title, message, autoCloseDelay = 3000) {\r\n        this.show(TYPE_ERROR, title, message, true, autoCloseDelay);\r\n    }\r\n    static errorApi(error, title = 'common.fail-to-load-data', autoCloseDelay = 3000) {\r\n        if (axios.isCancel(error)) {\r\n            // Do nothing if request was cancelled\r\n            return;\r\n        }\r\n        let message = null;\r\n        let messageId = 'common.unknown-error';\r\n        if (error.httpStatusCode >= 500) {\r\n            messageId = 'common.internal-server-error';\r\n        } else if (error.httpStatusCode < 500 && error.httpStatusCode >= 400) {\r\n            if (error.httpStatusCode === 400) {\r\n                messageId = 'common.bad-request';\r\n            } else if (error.httpStatusCode === 403) {\r\n                messageId = 'common.forbiden-request';\r\n            }\r\n        } else {\r\n            // Request fail even server was returned a success response\r\n            if (error.errorMessage) {\r\n                message = error.errorMessage\r\n            }\r\n        }\r\n        toast.error(<CustomToast titleId={title} message={message} messageId={messageId} time={new Date()} />, {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            pauseOnHover: true,\r\n            autoClose: autoCloseDelay\r\n        });\r\n    }\r\n\r\n    static show(type, title, message, rawMessage = false, autoCloseDelay = 3000) {\r\n        const content = <CustomToast titleId={title} messageId={rawMessage ? null : message} message={rawMessage ? message : null} time={new Date()} />;\r\n        const options = {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            pauseOnHover: true,\r\n            autoClose: autoCloseDelay\r\n        };\r\n\r\n        switch (type) {\r\n            case TYPE_SUCCESS:\r\n                toast.success(content, options);\r\n                break;\r\n            case TYPE_INFO:\r\n                toast.info(content, options);\r\n                break;\r\n            case TYPE_WARN:\r\n                toast.warn(content, options);\r\n                break;\r\n            case TYPE_ERROR:\r\n                toast.error(content, options);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ToastUtil;"]},"metadata":{},"sourceType":"module"}