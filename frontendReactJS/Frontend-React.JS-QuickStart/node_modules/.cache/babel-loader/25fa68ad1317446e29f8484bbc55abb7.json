{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport memoize, { strategies } from '@formatjs/fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n  if (defaults === void 0) {\n    defaults = {};\n  }\n\n  return whitelist.reduce(function (filtered, name) {\n    if (name in props) {\n      filtered[name] = props[name];\n    } else if (name in defaults) {\n      filtered[name] = defaults[name];\n    }\n\n    return filtered;\n  }, {});\n}\n\nvar defaultErrorHandler = function (error) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.error(error);\n  }\n};\n\nexport var DEFAULT_INTL_CONFIG = {\n  formats: {},\n  messages: {},\n  timeZone: undefined,\n  defaultLocale: 'en',\n  defaultFormats: {},\n  onError: defaultErrorHandler\n};\nexport function createIntlCache() {\n  return {\n    dateTime: {},\n    number: {},\n    message: {},\n    relativeTime: {},\n    pluralRules: {},\n    list: {},\n    displayNames: {}\n  };\n}\n\nfunction createFastMemoizeCache(store) {\n  return {\n    create: function () {\n      return {\n        has: function (key) {\n          return key in store;\n        },\n        get: function (key) {\n          return store[key];\n        },\n        set: function (key, value) {\n          store[key] = value;\n        }\n      };\n    }\n  };\n}\n/**\r\n * Create intl formatters and populate cache\r\n * @param cache explicit cache to prevent leaking memory\r\n */\n\n\nexport function createFormatters(cache) {\n  if (cache === void 0) {\n    cache = createIntlCache();\n  }\n\n  var RelativeTimeFormat = Intl.RelativeTimeFormat;\n  var ListFormat = Intl.ListFormat;\n  var DisplayNames = Intl.DisplayNames;\n  var getDateTimeFormat = memoize(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args)))();\n  }, {\n    cache: createFastMemoizeCache(cache.dateTime),\n    strategy: strategies.variadic\n  });\n  var getNumberFormat = memoize(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args)))();\n  }, {\n    cache: createFastMemoizeCache(cache.number),\n    strategy: strategies.variadic\n  });\n  var getPluralRules = memoize(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args)))();\n  }, {\n    cache: createFastMemoizeCache(cache.pluralRules),\n    strategy: strategies.variadic\n  });\n  return {\n    getDateTimeFormat: getDateTimeFormat,\n    getNumberFormat: getNumberFormat,\n    getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\n      return new IntlMessageFormat(message, locales, overrideFormats, __assign({\n        formatters: {\n          getNumberFormat: getNumberFormat,\n          getDateTimeFormat: getDateTimeFormat,\n          getPluralRules: getPluralRules\n        }\n      }, opts || {}));\n    }, {\n      cache: createFastMemoizeCache(cache.message),\n      strategy: strategies.variadic\n    }),\n    getRelativeTimeFormat: memoize(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args)))();\n    }, {\n      cache: createFastMemoizeCache(cache.relativeTime),\n      strategy: strategies.variadic\n    }),\n    getPluralRules: getPluralRules,\n    getListFormat: memoize(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args)))();\n    }, {\n      cache: createFastMemoizeCache(cache.list),\n      strategy: strategies.variadic\n    }),\n    getDisplayNames: memoize(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args)))();\n    }, {\n      cache: createFastMemoizeCache(cache.displayNames),\n      strategy: strategies.variadic\n    })\n  };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n  var formatType = formats && formats[type];\n  var format;\n\n  if (formatType) {\n    format = formatType[name];\n  }\n\n  if (format) {\n    return format;\n  }\n\n  onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}","map":{"version":3,"sources":["C:/Users/dangk/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/node_modules/@formatjs/intl/lib/src/utils.js"],"names":["__assign","__spreadArray","IntlMessageFormat","memoize","strategies","UnsupportedFormatterError","filterProps","props","whitelist","defaults","reduce","filtered","name","defaultErrorHandler","error","process","env","NODE_ENV","console","DEFAULT_INTL_CONFIG","formats","messages","timeZone","undefined","defaultLocale","defaultFormats","onError","createIntlCache","dateTime","number","message","relativeTime","pluralRules","list","displayNames","createFastMemoizeCache","store","create","has","key","get","set","value","createFormatters","cache","RelativeTimeFormat","Intl","ListFormat","DisplayNames","getDateTimeFormat","_a","args","_i","arguments","length","DateTimeFormat","bind","apply","strategy","variadic","getNumberFormat","NumberFormat","getPluralRules","PluralRules","getMessageFormat","locales","overrideFormats","opts","formatters","getRelativeTimeFormat","getListFormat","getDisplayNames","getNamedFormat","type","formatType","format"],"mappings":"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","sourcesContent":["import { __assign, __spreadArray } from \"tslib\";\r\nimport { IntlMessageFormat } from 'intl-messageformat';\r\nimport memoize, { strategies } from '@formatjs/fast-memoize';\r\nimport { UnsupportedFormatterError } from './error';\r\nexport function filterProps(props, whitelist, defaults) {\r\n    if (defaults === void 0) { defaults = {}; }\r\n    return whitelist.reduce(function (filtered, name) {\r\n        if (name in props) {\r\n            filtered[name] = props[name];\r\n        }\r\n        else if (name in defaults) {\r\n            filtered[name] = defaults[name];\r\n        }\r\n        return filtered;\r\n    }, {});\r\n}\r\nvar defaultErrorHandler = function (error) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        console.error(error);\r\n    }\r\n};\r\nexport var DEFAULT_INTL_CONFIG = {\r\n    formats: {},\r\n    messages: {},\r\n    timeZone: undefined,\r\n    defaultLocale: 'en',\r\n    defaultFormats: {},\r\n    onError: defaultErrorHandler,\r\n};\r\nexport function createIntlCache() {\r\n    return {\r\n        dateTime: {},\r\n        number: {},\r\n        message: {},\r\n        relativeTime: {},\r\n        pluralRules: {},\r\n        list: {},\r\n        displayNames: {},\r\n    };\r\n}\r\nfunction createFastMemoizeCache(store) {\r\n    return {\r\n        create: function () {\r\n            return {\r\n                has: function (key) {\r\n                    return key in store;\r\n                },\r\n                get: function (key) {\r\n                    return store[key];\r\n                },\r\n                set: function (key, value) {\r\n                    store[key] = value;\r\n                },\r\n            };\r\n        },\r\n    };\r\n}\r\n/**\r\n * Create intl formatters and populate cache\r\n * @param cache explicit cache to prevent leaking memory\r\n */\r\nexport function createFormatters(cache) {\r\n    if (cache === void 0) { cache = createIntlCache(); }\r\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\r\n    var ListFormat = Intl.ListFormat;\r\n    var DisplayNames = Intl.DisplayNames;\r\n    var getDateTimeFormat = memoize(function () {\r\n        var _a;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args)))();\r\n    }, {\r\n        cache: createFastMemoizeCache(cache.dateTime),\r\n        strategy: strategies.variadic,\r\n    });\r\n    var getNumberFormat = memoize(function () {\r\n        var _a;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args)))();\r\n    }, {\r\n        cache: createFastMemoizeCache(cache.number),\r\n        strategy: strategies.variadic,\r\n    });\r\n    var getPluralRules = memoize(function () {\r\n        var _a;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args)))();\r\n    }, {\r\n        cache: createFastMemoizeCache(cache.pluralRules),\r\n        strategy: strategies.variadic,\r\n    });\r\n    return {\r\n        getDateTimeFormat: getDateTimeFormat,\r\n        getNumberFormat: getNumberFormat,\r\n        getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\r\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\r\n                    getNumberFormat: getNumberFormat,\r\n                    getDateTimeFormat: getDateTimeFormat,\r\n                    getPluralRules: getPluralRules,\r\n                } }, (opts || {})));\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.message),\r\n            strategy: strategies.variadic,\r\n        }),\r\n        getRelativeTimeFormat: memoize(function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.relativeTime),\r\n            strategy: strategies.variadic,\r\n        }),\r\n        getPluralRules: getPluralRules,\r\n        getListFormat: memoize(function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.list),\r\n            strategy: strategies.variadic,\r\n        }),\r\n        getDisplayNames: memoize(function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.displayNames),\r\n            strategy: strategies.variadic,\r\n        }),\r\n    };\r\n}\r\nexport function getNamedFormat(formats, type, name, onError) {\r\n    var formatType = formats && formats[type];\r\n    var format;\r\n    if (formatType) {\r\n        format = formatType[name];\r\n    }\r\n    if (format) {\r\n        return format;\r\n    }\r\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}