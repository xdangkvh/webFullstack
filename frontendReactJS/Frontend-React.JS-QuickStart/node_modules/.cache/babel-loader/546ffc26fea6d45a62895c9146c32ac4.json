{"ast":null,"code":"import { ToString } from './262';\n/**\r\n * https://tc39.es/ecma402/#sec-getoption\r\n * @param opts\r\n * @param prop\r\n * @param type\r\n * @param values\r\n * @param fallback\r\n */\n\nexport function GetOption(opts, prop, type, values, fallback) {\n  // const descriptor = Object.getOwnPropertyDescriptor(opts, prop);\n  var value = opts[prop];\n\n  if (value !== undefined) {\n    if (type !== 'boolean' && type !== 'string') {\n      throw new TypeError('invalid type');\n    }\n\n    if (type === 'boolean') {\n      value = Boolean(value);\n    }\n\n    if (type === 'string') {\n      value = ToString(value);\n    }\n\n    if (values !== undefined && !values.filter(function (val) {\n      return val == value;\n    }).length) {\n      throw new RangeError(value + \" is not within \" + values.join(', '));\n    }\n\n    return value;\n  }\n\n  return fallback;\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/node_modules/@formatjs/ecma402-abstract/lib/GetOption.js"],"names":["ToString","GetOption","opts","prop","type","values","fallback","value","undefined","TypeError","Boolean","filter","val","length","RangeError","join"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,QAA7C,EAAuD;AAC1D;AACA,MAAIC,KAAK,GAAGL,IAAI,CAACC,IAAD,CAAhB;;AACA,MAAII,KAAK,KAAKC,SAAd,EAAyB;AACrB,QAAIJ,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,QAAnC,EAA6C;AACzC,YAAM,IAAIK,SAAJ,CAAc,cAAd,CAAN;AACH;;AACD,QAAIL,IAAI,KAAK,SAAb,EAAwB;AACpBG,MAAAA,KAAK,GAAGG,OAAO,CAACH,KAAD,CAAf;AACH;;AACD,QAAIH,IAAI,KAAK,QAAb,EAAuB;AACnBG,MAAAA,KAAK,GAAGP,QAAQ,CAACO,KAAD,CAAhB;AACH;;AACD,QAAIF,MAAM,KAAKG,SAAX,IAAwB,CAACH,MAAM,CAACM,MAAP,CAAc,UAAUC,GAAV,EAAe;AAAE,aAAOA,GAAG,IAAIL,KAAd;AAAsB,KAArD,EAAuDM,MAApF,EAA4F;AACxF,YAAM,IAAIC,UAAJ,CAAeP,KAAK,GAAG,iBAAR,GAA4BF,MAAM,CAACU,IAAP,CAAY,IAAZ,CAA3C,CAAN;AACH;;AACD,WAAOR,KAAP;AACH;;AACD,SAAOD,QAAP;AACH","sourcesContent":["import { ToString } from './262';\r\n/**\r\n * https://tc39.es/ecma402/#sec-getoption\r\n * @param opts\r\n * @param prop\r\n * @param type\r\n * @param values\r\n * @param fallback\r\n */\r\nexport function GetOption(opts, prop, type, values, fallback) {\r\n    // const descriptor = Object.getOwnPropertyDescriptor(opts, prop);\r\n    var value = opts[prop];\r\n    if (value !== undefined) {\r\n        if (type !== 'boolean' && type !== 'string') {\r\n            throw new TypeError('invalid type');\r\n        }\r\n        if (type === 'boolean') {\r\n            value = Boolean(value);\r\n        }\r\n        if (type === 'string') {\r\n            value = ToString(value);\r\n        }\r\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\r\n            throw new RangeError(value + \" is not within \" + values.join(', '));\r\n        }\r\n        return value;\r\n    }\r\n    return fallback;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}