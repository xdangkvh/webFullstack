{"ast":null,"code":"export var TYPE;\n\n(function (TYPE) {\n  /**\r\n   * Raw text\r\n   */\n  TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n  /**\r\n   * Variable w/o any format, e.g `var` in `this is a {var}`\r\n   */\n\n  TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n  /**\r\n   * Variable w/ number format\r\n   */\n\n  TYPE[TYPE[\"number\"] = 2] = \"number\";\n  /**\r\n   * Variable w/ date format\r\n   */\n\n  TYPE[TYPE[\"date\"] = 3] = \"date\";\n  /**\r\n   * Variable w/ time format\r\n   */\n\n  TYPE[TYPE[\"time\"] = 4] = \"time\";\n  /**\r\n   * Variable w/ select format\r\n   */\n\n  TYPE[TYPE[\"select\"] = 5] = \"select\";\n  /**\r\n   * Variable w/ plural format\r\n   */\n\n  TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n  /**\r\n   * Only possible within plural argument.\r\n   * This is the `#` symbol that will be substituted with the count.\r\n   */\n\n  TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n  /**\r\n   * XML-like tag\r\n   */\n\n  TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\n\nexport var SKELETON_TYPE;\n\n(function (SKELETON_TYPE) {\n  SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n  SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\r\n * Type Guards\r\n */\n\n\nexport function isLiteralElement(el) {\n  return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n  return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n  return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n  return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n  return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n  return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n  return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n  return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n  return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n  return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\n}\nexport function isDateTimeSkeleton(el) {\n  return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\n}\nexport function createLiteralElement(value) {\n  return {\n    type: TYPE.literal,\n    value: value\n  };\n}\nexport function createNumberElement(value, style) {\n  return {\n    type: TYPE.number,\n    value: value,\n    style: style\n  };\n}","map":{"version":3,"sources":["C:/Users/dangk/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/node_modules/@formatjs/icu-messageformat-parser/lib/types.js"],"names":["TYPE","SKELETON_TYPE","isLiteralElement","el","type","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","isPoundElement","pound","isTagElement","tag","isNumberSkeleton","isDateTimeSkeleton","dateTime","createLiteralElement","value","createNumberElement","style"],"mappings":"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","sourcesContent":["export var TYPE;\r\n(function (TYPE) {\r\n    /**\r\n     * Raw text\r\n     */\r\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\r\n    /**\r\n     * Variable w/o any format, e.g `var` in `this is a {var}`\r\n     */\r\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\r\n    /**\r\n     * Variable w/ number format\r\n     */\r\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\r\n    /**\r\n     * Variable w/ date format\r\n     */\r\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\r\n    /**\r\n     * Variable w/ time format\r\n     */\r\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\r\n    /**\r\n     * Variable w/ select format\r\n     */\r\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\r\n    /**\r\n     * Variable w/ plural format\r\n     */\r\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\r\n    /**\r\n     * Only possible within plural argument.\r\n     * This is the `#` symbol that will be substituted with the count.\r\n     */\r\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\r\n    /**\r\n     * XML-like tag\r\n     */\r\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\r\n})(TYPE || (TYPE = {}));\r\nexport var SKELETON_TYPE;\r\n(function (SKELETON_TYPE) {\r\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\r\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\r\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\r\n/**\r\n * Type Guards\r\n */\r\nexport function isLiteralElement(el) {\r\n    return el.type === TYPE.literal;\r\n}\r\nexport function isArgumentElement(el) {\r\n    return el.type === TYPE.argument;\r\n}\r\nexport function isNumberElement(el) {\r\n    return el.type === TYPE.number;\r\n}\r\nexport function isDateElement(el) {\r\n    return el.type === TYPE.date;\r\n}\r\nexport function isTimeElement(el) {\r\n    return el.type === TYPE.time;\r\n}\r\nexport function isSelectElement(el) {\r\n    return el.type === TYPE.select;\r\n}\r\nexport function isPluralElement(el) {\r\n    return el.type === TYPE.plural;\r\n}\r\nexport function isPoundElement(el) {\r\n    return el.type === TYPE.pound;\r\n}\r\nexport function isTagElement(el) {\r\n    return el.type === TYPE.tag;\r\n}\r\nexport function isNumberSkeleton(el) {\r\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\r\n}\r\nexport function isDateTimeSkeleton(el) {\r\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\r\n}\r\nexport function createLiteralElement(value) {\r\n    return {\r\n        type: TYPE.literal,\r\n        value: value,\r\n    };\r\n}\r\nexport function createNumberElement(value, style) {\r\n    return {\r\n        type: TYPE.number,\r\n        value: value,\r\n        style: style,\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}