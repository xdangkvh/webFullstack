{"ast":null,"code":"import { invariant } from '../utils';\nexport function DateTimeStyleFormat(dateStyle, timeStyle, dataLocaleData) {\n  var dateFormat, timeFormat;\n\n  if (timeStyle !== undefined) {\n    invariant(timeStyle === 'full' || timeStyle === 'long' || timeStyle === 'medium' || timeStyle === 'short', 'invalid timeStyle');\n    timeFormat = dataLocaleData.timeFormat[timeStyle];\n  }\n\n  if (dateStyle !== undefined) {\n    invariant(dateStyle === 'full' || dateStyle === 'long' || dateStyle === 'medium' || dateStyle === 'short', 'invalid dateStyle');\n    dateFormat = dataLocaleData.dateFormat[dateStyle];\n  }\n\n  if (dateStyle !== undefined && timeStyle !== undefined) {\n    var format = {};\n\n    for (var field in dateFormat) {\n      if (field !== 'pattern') {\n        // @ts-ignore\n        format[field] = dateFormat[field];\n      }\n    }\n\n    for (var field in timeFormat) {\n      if (field !== 'pattern' && field !== 'pattern12') {\n        // @ts-ignore\n        format[field] = timeFormat[field];\n      }\n    }\n\n    var connector = dataLocaleData.dateTimeFormat[dateStyle];\n    var pattern = connector.replace('{0}', timeFormat.pattern).replace('{1}', dateFormat.pattern);\n    format.pattern = pattern;\n\n    if ('pattern12' in timeFormat) {\n      var pattern12 = connector.replace('{0}', timeFormat.pattern12).replace('{1}', dateFormat.pattern);\n      format.pattern12 = pattern12;\n    }\n\n    return format;\n  }\n\n  if (timeStyle !== undefined) {\n    return timeFormat;\n  }\n\n  invariant(dateStyle !== undefined, 'dateStyle should not be undefined');\n  return dateFormat;\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/DateTimeStyleFormat.js"],"names":["invariant","DateTimeStyleFormat","dateStyle","timeStyle","dataLocaleData","dateFormat","timeFormat","undefined","format","field","connector","dateTimeFormat","pattern","replace","pattern12"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAO,SAASC,mBAAT,CAA6BC,SAA7B,EAAwCC,SAAxC,EAAmDC,cAAnD,EAAmE;AACtE,MAAIC,UAAJ,EAAgBC,UAAhB;;AACA,MAAIH,SAAS,KAAKI,SAAlB,EAA6B;AACzBP,IAAAA,SAAS,CAACG,SAAS,KAAK,MAAd,IACNA,SAAS,KAAK,MADR,IAENA,SAAS,KAAK,QAFR,IAGNA,SAAS,KAAK,OAHT,EAGkB,mBAHlB,CAAT;AAIAG,IAAAA,UAAU,GAAGF,cAAc,CAACE,UAAf,CAA0BH,SAA1B,CAAb;AACH;;AACD,MAAID,SAAS,KAAKK,SAAlB,EAA6B;AACzBP,IAAAA,SAAS,CAACE,SAAS,KAAK,MAAd,IACNA,SAAS,KAAK,MADR,IAENA,SAAS,KAAK,QAFR,IAGNA,SAAS,KAAK,OAHT,EAGkB,mBAHlB,CAAT;AAIAG,IAAAA,UAAU,GAAGD,cAAc,CAACC,UAAf,CAA0BH,SAA1B,CAAb;AACH;;AACD,MAAIA,SAAS,KAAKK,SAAd,IAA2BJ,SAAS,KAAKI,SAA7C,EAAwD;AACpD,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,KAAT,IAAkBJ,UAAlB,EAA8B;AAC1B,UAAII,KAAK,KAAK,SAAd,EAAyB;AACrB;AACAD,QAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBJ,UAAU,CAACI,KAAD,CAA1B;AACH;AACJ;;AACD,SAAK,IAAIA,KAAT,IAAkBH,UAAlB,EAA8B;AAC1B,UAAIG,KAAK,KAAK,SAAV,IAAuBA,KAAK,KAAK,WAArC,EAAkD;AAC9C;AACAD,QAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBH,UAAU,CAACG,KAAD,CAA1B;AACH;AACJ;;AACD,QAAIC,SAAS,GAAGN,cAAc,CAACO,cAAf,CAA8BT,SAA9B,CAAhB;AACA,QAAIU,OAAO,GAAGF,SAAS,CAClBG,OADS,CACD,KADC,EACMP,UAAU,CAACM,OADjB,EAETC,OAFS,CAED,KAFC,EAEMR,UAAU,CAACO,OAFjB,CAAd;AAGAJ,IAAAA,MAAM,CAACI,OAAP,GAAiBA,OAAjB;;AACA,QAAI,eAAeN,UAAnB,EAA+B;AAC3B,UAAIQ,SAAS,GAAGJ,SAAS,CACpBG,OADW,CACH,KADG,EACIP,UAAU,CAACQ,SADf,EAEXD,OAFW,CAEH,KAFG,EAEIR,UAAU,CAACO,OAFf,CAAhB;AAGAJ,MAAAA,MAAM,CAACM,SAAP,GAAmBA,SAAnB;AACH;;AACD,WAAON,MAAP;AACH;;AACD,MAAIL,SAAS,KAAKI,SAAlB,EAA6B;AACzB,WAAOD,UAAP;AACH;;AACDN,EAAAA,SAAS,CAACE,SAAS,KAAKK,SAAf,EAA0B,mCAA1B,CAAT;AACA,SAAOF,UAAP;AACH","sourcesContent":["import { invariant } from '../utils';\r\nexport function DateTimeStyleFormat(dateStyle, timeStyle, dataLocaleData) {\r\n    var dateFormat, timeFormat;\r\n    if (timeStyle !== undefined) {\r\n        invariant(timeStyle === 'full' ||\r\n            timeStyle === 'long' ||\r\n            timeStyle === 'medium' ||\r\n            timeStyle === 'short', 'invalid timeStyle');\r\n        timeFormat = dataLocaleData.timeFormat[timeStyle];\r\n    }\r\n    if (dateStyle !== undefined) {\r\n        invariant(dateStyle === 'full' ||\r\n            dateStyle === 'long' ||\r\n            dateStyle === 'medium' ||\r\n            dateStyle === 'short', 'invalid dateStyle');\r\n        dateFormat = dataLocaleData.dateFormat[dateStyle];\r\n    }\r\n    if (dateStyle !== undefined && timeStyle !== undefined) {\r\n        var format = {};\r\n        for (var field in dateFormat) {\r\n            if (field !== 'pattern') {\r\n                // @ts-ignore\r\n                format[field] = dateFormat[field];\r\n            }\r\n        }\r\n        for (var field in timeFormat) {\r\n            if (field !== 'pattern' && field !== 'pattern12') {\r\n                // @ts-ignore\r\n                format[field] = timeFormat[field];\r\n            }\r\n        }\r\n        var connector = dataLocaleData.dateTimeFormat[dateStyle];\r\n        var pattern = connector\r\n            .replace('{0}', timeFormat.pattern)\r\n            .replace('{1}', dateFormat.pattern);\r\n        format.pattern = pattern;\r\n        if ('pattern12' in timeFormat) {\r\n            var pattern12 = connector\r\n                .replace('{0}', timeFormat.pattern12)\r\n                .replace('{1}', dateFormat.pattern);\r\n            format.pattern12 = pattern12;\r\n        }\r\n        return format;\r\n    }\r\n    if (timeStyle !== undefined) {\r\n        return timeFormat;\r\n    }\r\n    invariant(dateStyle !== undefined, 'dateStyle should not be undefined');\r\n    return dateFormat;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}