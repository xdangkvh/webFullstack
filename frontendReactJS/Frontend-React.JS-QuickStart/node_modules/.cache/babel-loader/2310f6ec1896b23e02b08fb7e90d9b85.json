{"ast":null,"code":"import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\r\n * https://tc39.es/ecma402/#sec-lookupsupportedlocales\r\n * @param availableLocales\r\n * @param requestedLocales\r\n */\n\nexport function LookupSupportedLocales(availableLocales, requestedLocales) {\n  var subset = [];\n\n  for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n    var locale = requestedLocales_1[_i];\n    var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n    var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n\n    if (availableLocale) {\n      subset.push(availableLocale);\n    }\n  }\n\n  return subset;\n}","map":{"version":3,"sources":["C:/Users/dangk/Documents/webFullstack/frontendReactJS/Frontend-React.JS-QuickStart/node_modules/@formatjs/ecma402-abstract/lib/LookupSupportedLocales.js"],"names":["UNICODE_EXTENSION_SEQUENCE_REGEX","BestAvailableLocale","LookupSupportedLocales","availableLocales","requestedLocales","subset","_i","requestedLocales_1","length","locale","noExtensionLocale","replace","availableLocale","push"],"mappings":"AAAA,SAASA,gCAAT,QAAiD,SAAjD;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,sBAAT,CAAgCC,gBAAhC,EAAkDC,gBAAlD,EAAoE;AACvE,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,kBAAkB,GAAGH,gBAAtC,EAAwDE,EAAE,GAAGC,kBAAkB,CAACC,MAAhF,EAAwFF,EAAE,EAA1F,EAA8F;AAC1F,QAAIG,MAAM,GAAGF,kBAAkB,CAACD,EAAD,CAA/B;AACA,QAAII,iBAAiB,GAAGD,MAAM,CAACE,OAAP,CAAeX,gCAAf,EAAiD,EAAjD,CAAxB;AACA,QAAIY,eAAe,GAAGX,mBAAmB,CAACE,gBAAD,EAAmBO,iBAAnB,CAAzC;;AACA,QAAIE,eAAJ,EAAqB;AACjBP,MAAAA,MAAM,CAACQ,IAAP,CAAYD,eAAZ;AACH;AACJ;;AACD,SAAOP,MAAP;AACH","sourcesContent":["import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\r\nimport { BestAvailableLocale } from './BestAvailableLocale';\r\n/**\r\n * https://tc39.es/ecma402/#sec-lookupsupportedlocales\r\n * @param availableLocales\r\n * @param requestedLocales\r\n */\r\nexport function LookupSupportedLocales(availableLocales, requestedLocales) {\r\n    var subset = [];\r\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\r\n        var locale = requestedLocales_1[_i];\r\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\r\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\r\n        if (availableLocale) {\r\n            subset.push(availableLocale);\r\n        }\r\n    }\r\n    return subset;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}